import { Fragment, useState } from "react";
import { useQuery, useMutation, useQueryClient } from "react-query";
import { deleteData } from "../../helper/api";
import { getData } from "../../helper/api";
import Head from "next/head";
import CardList from "../../components/CardList";
import Form from "../../components/Form";
import PopDelete from "../../components/PopDelete";
import styles from "./index.module.scss";
import Layout from "../layout";

const UtsDuaPage = () => {
  const [isDelete, setIsDelete] = useState({
    open: false,
    id: "",
    deleting: false,
  });

  const queryClient = useQueryClient();

  const { data, isLoading, isError } = useQuery("mobil", getData);

  const { mutateAsync } = useMutation("mobil", deleteData, {
    onMutate: () =>
      setIsDelete((prev) => {
        return { ...prev, deleting: true };
      }),
    onSuccess: () => {
      queryClient.invalidateQueries("mobil");
      setIsDelete((prev) => {
        return { ...prev, deleting: false, open: false };
      });
    },
  });

  return (
    <Fragment>
      <Head>
        <title>UTS 2</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <main className={styles.main}>
          {isLoading ? (
            <h1>Loading..</h1>
          ) : isError ? (
            <h1>YNTKTS</h1>
          ) : data?.length === 0 ? (
            <h1>Data not found</h1>
          ) : (
            <CardList
              data={data}
              handleDelete={(event) =>
                setIsDelete((prev) => {
                  return { ...prev, open: true, id: event.target.id };
                })
              }
            />
          )}

          <Form />

          {isDelete?.open ? (
            <PopDelete
              handleCancel={() =>
                setIsDelete((prev) => {
                  return { ...prev, open: false, id: "" };
                })
              }
              handleDelete={() => mutateAsync({ id: isDelete?.id })}
              deleting={isDelete?.deleting ? "Deleting..." : "Delete"}
            />
          ) : null}
        </main>
      </Layout>
    </Fragment>
  );
};

export default UtsDuaPage;
